{"ast":null,"code":"import _createClass from \"/Users/ludovicmoissinac/projet6/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/ludovicmoissinac/projet6/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/ludovicmoissinac/projet6/front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/ludovicmoissinac/projet6/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Component, ViewChild, ElementRef, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, EventEmitter, Inject, Optional, NgModule, Injectable, Injector, SkipSelf, TemplateRef, defineInjectable, inject, INJECTOR } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves, AnimationDurations, MatCommonModule } from '@angular/material/core';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, ComponentPortal, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { DOCUMENT, CommonModule, Location } from '@angular/common';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { OverlayModule, Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { merge, Subject, of } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Injection token that can be used to access the data that was passed in to a bottom sheet.\n  @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/layout';\nimport * as ɵngcc3 from '@angular/cdk/portal';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/common';\n\nfunction MatBottomSheetContainer_ng_template_0_Template(rf, ctx) {}\n\nvar MAT_BOTTOM_SHEET_DATA = new InjectionToken('MatBottomSheetData');\n/**\n * Configuration used when opening a bottom sheet.\n * @template D\n */\n\nvar MatBottomSheetConfig = function MatBottomSheetConfig() {\n  _classCallCheck(this, MatBottomSheetConfig);\n\n  /**\n   * Data being injected into the child component.\n   */\n  this.data = null;\n  /**\n   * Whether the bottom sheet has a backdrop.\n   */\n\n  this.hasBackdrop = true;\n  /**\n   * Whether the user can use escape or clicking outside to close the bottom sheet.\n   */\n\n  this.disableClose = false;\n  /**\n   * Aria label to assign to the bottom sheet element.\n   */\n\n  this.ariaLabel = null;\n  /**\n   * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n\n  this.closeOnNavigation = true;\n  /**\n   * Whether the bottom sheet should focus the first focusable element on open.\n   */\n\n  this.autoFocus = true;\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Animations used by the Material bottom sheet.\n  @type {?} */\n\n\nvar matBottomSheetAnimations = {\n  /** Animation that shows and hides a bottom sheet. */\n  bottomSheetState: trigger('state', [state('void, hidden', style({\n    transform: 'translateY(100%)'\n  })), state('visible', style({\n    transform: 'translateY(0%)'\n  })), transition('visible => void, visible => hidden', animate(\"\".concat(AnimationDurations.COMPLEX, \" \").concat(AnimationCurves.ACCELERATION_CURVE))), transition('void => visible', animate(\"\".concat(AnimationDurations.EXITING, \" \").concat(AnimationCurves.DECELERATION_CURVE)))])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * \\@docs-private\n */\n\nvar MatBottomSheetContainer = /*#__PURE__*/function (_BasePortalOutlet) {\n  _inherits(MatBottomSheetContainer, _BasePortalOutlet);\n\n  var _super = _createSuper(MatBottomSheetContainer);\n\n  /**\n   * @param {?} _elementRef\n   * @param {?} _changeDetectorRef\n   * @param {?} _focusTrapFactory\n   * @param {?} breakpointObserver\n   * @param {?} document\n   * @param {?} bottomSheetConfig\n   */\n  function MatBottomSheetContainer(_elementRef, _changeDetectorRef, _focusTrapFactory, breakpointObserver, document, bottomSheetConfig) {\n    var _this;\n\n    _classCallCheck(this, MatBottomSheetContainer);\n\n    _this = _super.call(this);\n    _this._elementRef = _elementRef;\n    _this._changeDetectorRef = _changeDetectorRef;\n    _this._focusTrapFactory = _focusTrapFactory;\n    _this.bottomSheetConfig = bottomSheetConfig;\n    /**\n     * The state of the bottom sheet animations.\n     */\n\n    _this._animationState = 'void';\n    /**\n     * Emits whenever the state of the animation changes.\n     */\n\n    _this._animationStateChanged = new EventEmitter();\n    /**\n     * Element that was focused before the bottom sheet was opened.\n     */\n\n    _this._elementFocusedBeforeOpened = null;\n    _this._document = document;\n    _this._breakpointSubscription = breakpointObserver.observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge]).subscribe(function () {\n      _this._toggleClass('mat-bottom-sheet-container-medium', breakpointObserver.isMatched(Breakpoints.Medium));\n\n      _this._toggleClass('mat-bottom-sheet-container-large', breakpointObserver.isMatched(Breakpoints.Large));\n\n      _this._toggleClass('mat-bottom-sheet-container-xlarge', breakpointObserver.isMatched(Breakpoints.XLarge));\n    });\n    return _this;\n  }\n  /**\n   * Attach a component portal as content to this bottom sheet container.\n   * @template T\n   * @param {?} portal\n   * @return {?}\n   */\n\n\n  _createClass(MatBottomSheetContainer, [{\n    key: \"attachComponentPortal\",\n    value: function attachComponentPortal(portal) {\n      this._validatePortalAttached();\n\n      this._setPanelClass();\n\n      this._savePreviouslyFocusedElement();\n\n      return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a template portal as content to this bottom sheet container.\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n\n  }, {\n    key: \"attachTemplatePortal\",\n    value: function attachTemplatePortal(portal) {\n      this._validatePortalAttached();\n\n      this._setPanelClass();\n\n      this._savePreviouslyFocusedElement();\n\n      return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Begin animation of bottom sheet entrance into view.\n     * @return {?}\n     */\n\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      if (!this._destroyed) {\n        this._animationState = 'visible';\n\n        this._changeDetectorRef.detectChanges();\n      }\n    }\n    /**\n     * Begin animation of the bottom sheet exiting from view.\n     * @return {?}\n     */\n\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      if (!this._destroyed) {\n        this._animationState = 'hidden';\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._breakpointSubscription.unsubscribe();\n\n      this._destroyed = true;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onAnimationDone\",\n    value: function _onAnimationDone(event) {\n      if (event.toState === 'hidden') {\n        this._restoreFocus();\n      } else if (event.toState === 'visible' && this.bottomSheetConfig.autoFocus) {\n        this._trapFocus();\n      }\n\n      this._animationStateChanged.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onAnimationStart\",\n    value: function _onAnimationStart(event) {\n      this._animationStateChanged.emit(event);\n    }\n    /**\n     * @param {?} cssClass\n     * @param {?} add\n     * @return {?}\n     */\n\n  }, {\n    key: \"_toggleClass\",\n    value: function _toggleClass(cssClass, add) {\n      /** @type {?} */\n      var classList = this._elementRef.nativeElement.classList;\n      add ? classList.add(cssClass) : classList.remove(cssClass);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_validatePortalAttached\",\n    value: function _validatePortalAttached() {\n      if (this._portalOutlet.hasAttached()) {\n        throw Error('Attempting to attach bottom sheet content after content is already attached');\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setPanelClass\",\n    value: function _setPanelClass() {\n      /** @type {?} */\n      var element = this._elementRef.nativeElement;\n      /** @type {?} */\n\n      var panelClass = this.bottomSheetConfig.panelClass;\n\n      if (Array.isArray(panelClass)) {\n        // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n        panelClass.forEach(function (cssClass) {\n          return element.classList.add(cssClass);\n        });\n      } else if (panelClass) {\n        element.classList.add(panelClass);\n      }\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_trapFocus\",\n    value: function _trapFocus() {\n      if (!this._focusTrap) {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n      }\n\n      this._focusTrap.focusInitialElementWhenReady();\n    }\n    /**\n     * Restores focus to the element that was focused before the bottom sheet opened.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_restoreFocus\",\n    value: function _restoreFocus() {\n      /** @type {?} */\n      var toFocus = this._elementFocusedBeforeOpened; // We need the extra check, because IE can set the `activeElement` to null in some cases.\n\n      if (toFocus && typeof toFocus.focus === 'function') {\n        toFocus.focus();\n      }\n\n      if (this._focusTrap) {\n        this._focusTrap.destroy();\n      }\n    }\n    /**\n     * Saves a reference to the element that was focused before the bottom sheet was opened.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_savePreviouslyFocusedElement\",\n    value: function _savePreviouslyFocusedElement() {\n      var _this2 = this;\n\n      this._elementFocusedBeforeOpened =\n      /** @type {?} */\n      this._document.activeElement; // The `focus` method isn't available during server-side rendering.\n\n      if (this._elementRef.nativeElement.focus) {\n        Promise.resolve().then(function () {\n          return _this2._elementRef.nativeElement.focus();\n        });\n      }\n    }\n  }]);\n\n  return MatBottomSheetContainer;\n}(BasePortalOutlet);\n\nMatBottomSheetContainer.ɵfac = function MatBottomSheetContainer_Factory(t) {\n  return new (t || MatBottomSheetContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BreakpointObserver), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatBottomSheetConfig));\n};\n\nMatBottomSheetContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatBottomSheetContainer,\n  selectors: [[\"mat-bottom-sheet-container\"]],\n  viewQuery: function MatBottomSheetContainer_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    }\n  },\n  hostAttrs: [\"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-modal\", \"true\", 1, \"mat-bottom-sheet-container\"],\n  hostVars: 2,\n  hostBindings: function MatBottomSheetContainer_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵsyntheticHostListener(\"@state.start\", function MatBottomSheetContainer_animation_state_start_HostBindingHandler($event) {\n        return ctx._onAnimationStart($event);\n      })(\"@state.done\", function MatBottomSheetContainer_animation_state_done_HostBindingHandler($event) {\n        return ctx._onAnimationDone($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.bottomSheetConfig == null ? null : ctx.bottomSheetConfig.ariaLabel);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkPortalOutlet\", \"\"]],\n  template: function MatBottomSheetContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, MatBottomSheetContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    }\n  },\n  directives: [ɵngcc3.CdkPortalOutlet],\n  styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}@media screen and (-ms-high-contrast:active){.mat-bottom-sheet-container{outline:1px solid}}.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium,.mat-bottom-sheet-container-xlarge{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matBottomSheetAnimations.bottomSheetState]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatBottomSheetContainer.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: FocusTrapFactory\n  }, {\n    type: BreakpointObserver\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: MatBottomSheetConfig\n  }];\n};\n\nMatBottomSheetContainer.propDecorators = {\n  _portalOutlet: [{\n    type: ViewChild,\n    args: [CdkPortalOutlet]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatBottomSheetContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-bottom-sheet-container',\n      template: \"<ng-template cdkPortalOutlet></ng-template>\",\n      styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}@media screen and (-ms-high-contrast:active){.mat-bottom-sheet-container{outline:1px solid}}.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium,.mat-bottom-sheet-container-xlarge{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\"],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [matBottomSheetAnimations.bottomSheetState],\n      host: {\n        'class': 'mat-bottom-sheet-container',\n        'tabindex': '-1',\n        'role': 'dialog',\n        'aria-modal': 'true',\n        '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n        '[@state]': '_animationState',\n        '(@state.start)': '_onAnimationStart($event)',\n        '(@state.done)': '_onAnimationDone($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.FocusTrapFactory\n    }, {\n      type: ɵngcc2.BreakpointObserver\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: MatBottomSheetConfig\n    }];\n  }, {\n    _portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar MatBottomSheetModule = function MatBottomSheetModule() {\n  _classCallCheck(this, MatBottomSheetModule);\n};\n\nMatBottomSheetModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatBottomSheetModule\n});\nMatBottomSheetModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatBottomSheetModule_Factory(t) {\n    return new (t || MatBottomSheetModule)();\n  },\n  imports: [[CommonModule, OverlayModule, MatCommonModule, PortalModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatBottomSheetModule, {\n    declarations: function declarations() {\n      return [MatBottomSheetContainer];\n    },\n    imports: function imports() {\n      return [CommonModule, OverlayModule, MatCommonModule, PortalModule];\n    },\n    exports: function exports() {\n      return [MatBottomSheetContainer, MatCommonModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatBottomSheetModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, MatCommonModule, PortalModule],\n      exports: [MatBottomSheetContainer, MatCommonModule],\n      declarations: [MatBottomSheetContainer],\n      entryComponents: [MatBottomSheetContainer]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n * @template T, R\n */\n\n\nvar MatBottomSheetRef = /*#__PURE__*/function () {\n  /**\n   * @param {?} containerInstance\n   * @param {?} _overlayRef\n   * @param {?=} _location\n   */\n  function MatBottomSheetRef(containerInstance, _overlayRef, // @breaking-change 8.0.0 `_location` parameter to be removed.\n  _location) {\n    var _this3 = this;\n\n    _classCallCheck(this, MatBottomSheetRef);\n\n    this._overlayRef = _overlayRef;\n    /**\n     * Subject for notifying the user that the bottom sheet has been dismissed.\n     */\n\n    this._afterDismissed = new Subject();\n    /**\n     * Subject for notifying the user that the bottom sheet has opened and appeared.\n     */\n\n    this._afterOpened = new Subject();\n    this.containerInstance = containerInstance; // Emit when opening animation completes\n\n    containerInstance._animationStateChanged.pipe(filter(function (event) {\n      return event.phaseName === 'done' && event.toState === 'visible';\n    }), take(1)).subscribe(function () {\n      _this3._afterOpened.next();\n\n      _this3._afterOpened.complete();\n    }); // Dispose overlay when closing animation is complete\n\n\n    containerInstance._animationStateChanged.pipe(filter(function (event) {\n      return event.phaseName === 'done' && event.toState === 'hidden';\n    }), take(1)).subscribe(function () {\n      _this3._overlayRef.dispose();\n\n      _this3._afterDismissed.next(_this3._result);\n\n      _this3._afterDismissed.complete();\n    });\n\n    if (!containerInstance.bottomSheetConfig.disableClose) {\n      merge(_overlayRef.backdropClick(), _overlayRef.keydownEvents().pipe(filter(function (event) {\n        return event.keyCode === ESCAPE;\n      }))).subscribe(function () {\n        return _this3.dismiss();\n      });\n    }\n  }\n  /**\n   * Dismisses the bottom sheet.\n   * @param {?=} result Data to be passed back to the bottom sheet opener.\n   * @return {?}\n   */\n\n\n  _createClass(MatBottomSheetRef, [{\n    key: \"dismiss\",\n    value: function dismiss(result) {\n      var _this4 = this;\n\n      if (!this._afterDismissed.closed) {\n        // Transition the backdrop in parallel to the bottom sheet.\n        this.containerInstance._animationStateChanged.pipe(filter(function (event) {\n          return event.phaseName === 'start';\n        }), take(1)).subscribe(function () {\n          return _this4._overlayRef.detachBackdrop();\n        });\n\n        this._result = result;\n        this.containerInstance.exit();\n      }\n    }\n    /**\n     * Gets an observable that is notified when the bottom sheet is finished closing.\n     * @return {?}\n     */\n\n  }, {\n    key: \"afterDismissed\",\n    value: function afterDismissed() {\n      return this._afterDismissed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the bottom sheet has opened and appeared.\n     * @return {?}\n     */\n\n  }, {\n    key: \"afterOpened\",\n    value: function afterOpened() {\n      return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n\n  }, {\n    key: \"backdropClick\",\n    value: function backdropClick() {\n      return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n\n  }, {\n    key: \"keydownEvents\",\n    value: function keydownEvents() {\n      return this._overlayRef.keydownEvents();\n    }\n  }]);\n\n  return MatBottomSheetRef;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Injection token that can be used to specify default bottom sheet options.\n  @type {?} */\n\n\nvar MAT_BOTTOM_SHEET_DEFAULT_OPTIONS = new InjectionToken('mat-bottom-sheet-default-options');\n/**\n * Service to trigger Material Design bottom sheets.\n */\n\nvar MatBottomSheet = /*#__PURE__*/function () {\n  /**\n   * @param {?} _overlay\n   * @param {?} _injector\n   * @param {?} _parentBottomSheet\n   * @param {?=} _location\n   * @param {?=} _defaultOptions\n   */\n  function MatBottomSheet(_overlay, _injector, _parentBottomSheet, _location, _defaultOptions) {\n    _classCallCheck(this, MatBottomSheet);\n\n    this._overlay = _overlay;\n    this._injector = _injector;\n    this._parentBottomSheet = _parentBottomSheet;\n    this._location = _location;\n    this._defaultOptions = _defaultOptions;\n    this._bottomSheetRefAtThisLevel = null;\n  }\n  /**\n   * Reference to the currently opened bottom sheet.\n   * @return {?}\n   */\n\n\n  _createClass(MatBottomSheet, [{\n    key: \"_openedBottomSheetRef\",\n    get: function get() {\n      /** @type {?} */\n      var parent = this._parentBottomSheet;\n      return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      if (this._parentBottomSheet) {\n        this._parentBottomSheet._openedBottomSheetRef = value;\n      } else {\n        this._bottomSheetRefAtThisLevel = value;\n      }\n    }\n    /**\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef\n     * @param {?=} config\n     * @return {?}\n     */\n\n  }, {\n    key: \"open\",\n    value: function open(componentOrTemplateRef, config) {\n      var _this5 = this;\n\n      /** @type {?} */\n      var _config = _applyConfigDefaults(this._defaultOptions || new MatBottomSheetConfig(), config);\n      /** @type {?} */\n\n\n      var overlayRef = this._createOverlay(_config);\n      /** @type {?} */\n\n\n      var container = this._attachContainer(overlayRef, _config);\n      /** @type {?} */\n\n\n      var ref = new MatBottomSheetRef(container, overlayRef, this._location);\n\n      if (componentOrTemplateRef instanceof TemplateRef) {\n        container.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef,\n        /** @type {?} */\n        null,\n        /** @type {?} */\n        {\n          $implicit: _config.data,\n          bottomSheetRef: ref\n        }));\n      } else {\n        /** @type {?} */\n        var portal = new ComponentPortal(componentOrTemplateRef, undefined, this._createInjector(_config, ref));\n        /** @type {?} */\n\n        var contentRef = container.attachComponentPortal(portal);\n        ref.instance = contentRef.instance;\n      } // When the bottom sheet is dismissed, clear the reference to it.\n\n\n      ref.afterDismissed().subscribe(function () {\n        // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n        if (_this5._openedBottomSheetRef == ref) {\n          _this5._openedBottomSheetRef = null;\n        }\n      });\n\n      if (this._openedBottomSheetRef) {\n        // If a bottom sheet is already in view, dismiss it and enter the\n        // new bottom sheet after exit animation is complete.\n        this._openedBottomSheetRef.afterDismissed().subscribe(function () {\n          return ref.containerInstance.enter();\n        });\n\n        this._openedBottomSheetRef.dismiss();\n      } else {\n        // If no bottom sheet is in view, enter the new bottom sheet.\n        ref.containerInstance.enter();\n      }\n\n      this._openedBottomSheetRef = ref;\n      return ref;\n    }\n    /**\n     * Dismisses the currently-visible bottom sheet.\n     * @return {?}\n     */\n\n  }, {\n    key: \"dismiss\",\n    value: function dismiss() {\n      if (this._openedBottomSheetRef) {\n        this._openedBottomSheetRef.dismiss();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this._bottomSheetRefAtThisLevel) {\n        this._bottomSheetRefAtThisLevel.dismiss();\n      }\n    }\n    /**\n     * Attaches the bottom sheet container component to the overlay.\n     * @param {?} overlayRef\n     * @param {?} config\n     * @return {?}\n     */\n\n  }, {\n    key: \"_attachContainer\",\n    value: function _attachContainer(overlayRef, config) {\n      /** @type {?} */\n      var userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n      /** @type {?} */\n\n      var injector = new PortalInjector(userInjector || this._injector, new WeakMap([[MatBottomSheetConfig, config]]));\n      /** @type {?} */\n\n      var containerPortal = new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n      /** @type {?} */\n\n      var containerRef = overlayRef.attach(containerPortal);\n      return containerRef.instance;\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param {?} config The user-specified bottom sheet config.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createOverlay\",\n    value: function _createOverlay(config) {\n      /** @type {?} */\n      var overlayConfig = new OverlayConfig({\n        direction: config.direction,\n        hasBackdrop: config.hasBackdrop,\n        disposeOnNavigation: config.closeOnNavigation,\n        maxWidth: '100%',\n        scrollStrategy: this._overlay.scrollStrategies.block(),\n        positionStrategy: this._overlay.position().global().centerHorizontally().bottom('0')\n      });\n\n      if (config.backdropClass) {\n        overlayConfig.backdropClass = config.backdropClass;\n      }\n\n      return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a bottom sheet component.\n     * @template T\n     * @param {?} config Config that was used to create the bottom sheet.\n     * @param {?} bottomSheetRef Reference to the bottom sheet.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createInjector\",\n    value: function _createInjector(config, bottomSheetRef) {\n      /** @type {?} */\n      var userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n      /** @type {?} */\n\n      var injectionTokens = new WeakMap([[MatBottomSheetRef, bottomSheetRef], [MAT_BOTTOM_SHEET_DATA, config.data]]);\n\n      if (config.direction && (!userInjector || !userInjector.get(Directionality, null))) {\n        injectionTokens.set(Directionality, {\n          value: config.direction,\n          change: of()\n        });\n      }\n\n      return new PortalInjector(userInjector || this._injector, injectionTokens);\n    }\n  }]);\n\n  return MatBottomSheet;\n}();\n\nMatBottomSheet.ɵfac = function MatBottomSheet_Factory(t) {\n  return new (t || MatBottomSheet)(ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(MatBottomSheet, 12), ɵngcc0.ɵɵinject(ɵngcc5.Location, 8), ɵngcc0.ɵɵinject(MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, 8));\n};\n\nMatBottomSheet.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: MatBottomSheet,\n  factory: MatBottomSheet.ɵfac,\n  providedIn: MatBottomSheetModule\n});\n/** @nocollapse */\n\nMatBottomSheet.ctorParameters = function () {\n  return [{\n    type: Overlay\n  }, {\n    type: Injector\n  }, {\n    type: MatBottomSheet,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: Location,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: MatBottomSheetConfig,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS]\n    }]\n  }];\n};\n/** @nocollapse */\n\n\nMatBottomSheet.ngInjectableDef = defineInjectable({\n  factory: function MatBottomSheet_Factory() {\n    return new MatBottomSheet(inject(Overlay), inject(INJECTOR), inject(MatBottomSheet, 12), inject(Location, 8), inject(MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, 8));\n  },\n  token: MatBottomSheet,\n  providedIn: MatBottomSheetModule\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatBottomSheet, [{\n    type: Injectable,\n    args: [{\n      providedIn: MatBottomSheetModule\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc4.Overlay\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: MatBottomSheet,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: ɵngcc5.Location,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: MatBottomSheetConfig,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Applies default options to the bottom sheet config.\n * @param {?} defaults Object containing the default values to which to fall back.\n * @param {?=} config The configuration to which the defaults will be applied.\n * @return {?} The new configuration object with defaults applied.\n */\n\n\nfunction _applyConfigDefaults(defaults, config) {\n  return Object.assign({}, defaults, config);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { MatBottomSheetModule, MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, MatBottomSheet, MAT_BOTTOM_SHEET_DATA, MatBottomSheetConfig, MatBottomSheetContainer, matBottomSheetAnimations, MatBottomSheetRef };","map":{"version":3,"sources":["../../../src/lib/bottom-sheet/bottom-sheet-config.ts","../../../src/lib/bottom-sheet/bottom-sheet-animations.ts","../../../src/lib/bottom-sheet/bottom-sheet-container.ts","../../../src/lib/bottom-sheet/bottom-sheet-module.ts","../../../src/lib/bottom-sheet/bottom-sheet-ref.ts","../../../src/lib/bottom-sheet/bottom-sheet.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewContainerRef, InjectionToken} from '@angular/core';\nimport {Direction} from '@angular/cdk/bidi';\n\n/** Injection token that can be used to access the data that was passed in to a bottom sheet. */\nexport const MAT_BOTTOM_SHEET_DATA = new InjectionToken<any>('MatBottomSheetData');\n\n/**\n * Configuration used when opening a bottom sheet.\n */\nexport class MatBottomSheetConfig<D = any> {\n  /** The view container to place the overlay for the bottom sheet into. */\n  viewContainerRef?: ViewContainerRef;\n\n  /** Extra CSS classes to be added to the bottom sheet container. */\n  panelClass?: string | string[];\n\n  /** Text layout direction for the bottom sheet. */\n  direction?: Direction;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /** Whether the bottom sheet has a backdrop. */\n  hasBackdrop?: boolean = true;\n\n  /** Custom class for the backdrop. */\n  backdropClass?: string;\n\n  /** Whether the user can use escape or clicking outside to close the bottom sheet. */\n  disableClose?: boolean = false;\n\n  /** Aria label to assign to the bottom sheet element. */\n  ariaLabel?: string | null = null;\n\n  /**\n   * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n  closeOnNavigation?: boolean = true;\n\n  /** Whether the bottom sheet should focus the first focusable element on open. */\n  autoFocus?: boolean = true;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\nimport {AnimationCurves, AnimationDurations} from '@angular/material/core';\n\n/** Animations used by the Material bottom sheet. */\nexport const matBottomSheetAnimations: {\n  readonly bottomSheetState: AnimationTriggerMetadata;\n} = {\n  /** Animation that shows and hides a bottom sheet. */\n  bottomSheetState: trigger('state', [\n    state('void, hidden', style({transform: 'translateY(100%)'})),\n    state('visible', style({transform: 'translateY(0%)'})),\n    transition('visible => void, visible => hidden',\n        animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.ACCELERATION_CURVE}`)),\n    transition('void => visible',\n        animate(`${AnimationDurations.EXITING} ${AnimationCurves.DECELERATION_CURVE}`)),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ComponentRef,\n  EmbeddedViewRef,\n  ViewChild,\n  OnDestroy,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  EventEmitter,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  BasePortalOutlet,\n  ComponentPortal,\n  TemplatePortal,\n  CdkPortalOutlet,\n} from '@angular/cdk/portal';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {MatBottomSheetConfig} from './bottom-sheet-config';\nimport {matBottomSheetAnimations} from './bottom-sheet-animations';\nimport {Subscription} from 'rxjs';\nimport {DOCUMENT} from '@angular/common';\nimport {FocusTrap, FocusTrapFactory} from '@angular/cdk/a11y';\n\n// TODO(crisbeto): consolidate some logic between this, MatDialog and MatSnackBar\n\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-bottom-sheet-container',\n  templateUrl: 'bottom-sheet-container.html',\n  styleUrls: ['bottom-sheet-container.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [matBottomSheetAnimations.bottomSheetState],\n  host: {\n    'class': 'mat-bottom-sheet-container',\n    'tabindex': '-1',\n    'role': 'dialog',\n    'aria-modal': 'true',\n    '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n    '[@state]': '_animationState',\n    '(@state.start)': '_onAnimationStart($event)',\n    '(@state.done)': '_onAnimationDone($event)'\n  },\n})\nexport class MatBottomSheetContainer extends BasePortalOutlet implements OnDestroy {\n  private _breakpointSubscription: Subscription;\n\n  /** The portal outlet inside of this container into which the content will be loaded. */\n  @ViewChild(CdkPortalOutlet) _portalOutlet: CdkPortalOutlet;\n\n  /** The state of the bottom sheet animations. */\n  _animationState: 'void' | 'visible' | 'hidden' = 'void';\n\n  /** Emits whenever the state of the animation changes. */\n  _animationStateChanged = new EventEmitter<AnimationEvent>();\n\n  /** The class that traps and manages focus within the bottom sheet. */\n  private _focusTrap: FocusTrap;\n\n  /** Element that was focused before the bottom sheet was opened. */\n  private _elementFocusedBeforeOpened: HTMLElement | null = null;\n\n  /** Server-side rendering-compatible reference to the global document object. */\n  private _document: Document;\n\n  /** Whether the component has been destroyed. */\n  private _destroyed: boolean;\n\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _focusTrapFactory: FocusTrapFactory,\n    breakpointObserver: BreakpointObserver,\n    @Optional() @Inject(DOCUMENT) document: any,\n    /** The bottom sheet configuration. */\n    public bottomSheetConfig: MatBottomSheetConfig) {\n    super();\n\n    this._document = document;\n    this._breakpointSubscription = breakpointObserver\n      .observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n      .subscribe(() => {\n        this._toggleClass('mat-bottom-sheet-container-medium',\n            breakpointObserver.isMatched(Breakpoints.Medium));\n        this._toggleClass('mat-bottom-sheet-container-large',\n            breakpointObserver.isMatched(Breakpoints.Large));\n        this._toggleClass('mat-bottom-sheet-container-xlarge',\n            breakpointObserver.isMatched(Breakpoints.XLarge));\n      });\n  }\n\n  /** Attach a component portal as content to this bottom sheet container. */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    this._validatePortalAttached();\n    this._setPanelClass();\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /** Attach a template portal as content to this bottom sheet container. */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    this._validatePortalAttached();\n    this._setPanelClass();\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  /** Begin animation of bottom sheet entrance into view. */\n  enter(): void {\n    if (!this._destroyed) {\n      this._animationState = 'visible';\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /** Begin animation of the bottom sheet exiting from view. */\n  exit(): void {\n    if (!this._destroyed) {\n      this._animationState = 'hidden';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._breakpointSubscription.unsubscribe();\n    this._destroyed = true;\n  }\n\n  _onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'hidden') {\n      this._restoreFocus();\n    } else if (event.toState === 'visible' && this.bottomSheetConfig.autoFocus) {\n      this._trapFocus();\n    }\n\n    this._animationStateChanged.emit(event);\n  }\n\n  _onAnimationStart(event: AnimationEvent) {\n    this._animationStateChanged.emit(event);\n  }\n\n  private _toggleClass(cssClass: string, add: boolean) {\n    const classList = this._elementRef.nativeElement.classList;\n    add ? classList.add(cssClass) : classList.remove(cssClass);\n  }\n\n  private _validatePortalAttached() {\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Attempting to attach bottom sheet content after content is already attached');\n    }\n  }\n\n  private _setPanelClass() {\n    const element: HTMLElement = this._elementRef.nativeElement;\n    const panelClass = this.bottomSheetConfig.panelClass;\n\n    if (Array.isArray(panelClass)) {\n      // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n      panelClass.forEach(cssClass => element.classList.add(cssClass));\n    } else if (panelClass) {\n      element.classList.add(panelClass);\n    }\n  }\n\n\n  /** Moves the focus inside the focus trap. */\n  private _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n\n    this._focusTrap.focusInitialElementWhenReady();\n  }\n\n  /** Restores focus to the element that was focused before the bottom sheet opened. */\n  private _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n\n  /** Saves a reference to the element that was focused before the bottom sheet was opened. */\n  private _savePreviouslyFocusedElement() {\n    this._elementFocusedBeforeOpened = this._document.activeElement as HTMLElement;\n\n    // The `focus` method isn't available during server-side rendering.\n    if (this._elementRef.nativeElement.focus) {\n      Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatBottomSheetContainer} from './bottom-sheet-container';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MatCommonModule,\n    PortalModule,\n  ],\n  exports: [MatBottomSheetContainer, MatCommonModule],\n  declarations: [MatBottomSheetContainer],\n  entryComponents: [MatBottomSheetContainer],\n})\nexport class MatBottomSheetModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location} from '@angular/common';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {OverlayRef} from '@angular/cdk/overlay';\nimport {merge, Observable, Subject} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {MatBottomSheetContainer} from './bottom-sheet-container';\n\n\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n */\nexport class MatBottomSheetRef<T = any, R = any> {\n  /** Instance of the component making up the content of the bottom sheet. */\n  instance: T;\n\n  /**\n   * Instance of the component into which the bottom sheet content is projected.\n   * @docs-private\n   */\n  containerInstance: MatBottomSheetContainer;\n\n  /** Subject for notifying the user that the bottom sheet has been dismissed. */\n  private readonly _afterDismissed = new Subject<R | undefined>();\n\n  /** Subject for notifying the user that the bottom sheet has opened and appeared. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Result to be passed down to the `afterDismissed` stream. */\n  private _result: R | undefined;\n\n  constructor(\n    containerInstance: MatBottomSheetContainer,\n    private _overlayRef: OverlayRef,\n    // @breaking-change 8.0.0 `_location` parameter to be removed.\n    _location?: Location) {\n    this.containerInstance = containerInstance;\n\n    // Emit when opening animation completes\n    containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'done' && event.toState === 'visible'),\n      take(1)\n    )\n    .subscribe(() => {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    });\n\n    // Dispose overlay when closing animation is complete\n    containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'done' && event.toState === 'hidden'),\n      take(1)\n    )\n    .subscribe(() => {\n      this._overlayRef.dispose();\n      this._afterDismissed.next(this._result);\n      this._afterDismissed.complete();\n    });\n\n    if (!containerInstance.bottomSheetConfig.disableClose) {\n      merge(\n        _overlayRef.backdropClick(),\n        _overlayRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))\n      ).subscribe(() => this.dismiss());\n    }\n  }\n\n  /**\n   * Dismisses the bottom sheet.\n   * @param result Data to be passed back to the bottom sheet opener.\n   */\n  dismiss(result?: R): void {\n    if (!this._afterDismissed.closed) {\n      // Transition the backdrop in parallel to the bottom sheet.\n      this.containerInstance._animationStateChanged.pipe(\n        filter(event => event.phaseName === 'start'),\n        take(1)\n      ).subscribe(() => this._overlayRef.detachBackdrop());\n\n      this._result = result;\n      this.containerInstance.exit();\n    }\n  }\n\n  /** Gets an observable that is notified when the bottom sheet is finished closing. */\n  afterDismissed(): Observable<R | undefined> {\n    return this._afterDismissed.asObservable();\n  }\n\n  /** Gets an observable that is notified when the bottom sheet has opened and appeared. */\n  afterOpened(): Observable<void> {\n    return this._afterOpened.asObservable();\n  }\n\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick(): Observable<MouseEvent> {\n    return this._overlayRef.backdropClick();\n  }\n\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents(): Observable<KeyboardEvent> {\n    return this._overlayRef.keydownEvents();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Overlay, OverlayConfig, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType, PortalInjector, TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ComponentRef,\n  Injectable,\n  Injector,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n  InjectionToken,\n  Inject,\n  OnDestroy,\n} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {of as observableOf} from 'rxjs';\nimport {MAT_BOTTOM_SHEET_DATA, MatBottomSheetConfig} from './bottom-sheet-config';\nimport {MatBottomSheetContainer} from './bottom-sheet-container';\nimport {MatBottomSheetModule} from './bottom-sheet-module';\nimport {MatBottomSheetRef} from './bottom-sheet-ref';\n\n\n/** Injection token that can be used to specify default bottom sheet options. */\nexport const MAT_BOTTOM_SHEET_DEFAULT_OPTIONS =\n    new InjectionToken<MatBottomSheetConfig>('mat-bottom-sheet-default-options');\n\n/**\n * Service to trigger Material Design bottom sheets.\n */\n@Injectable({providedIn: MatBottomSheetModule})\nexport class MatBottomSheet implements OnDestroy {\n  private _bottomSheetRefAtThisLevel: MatBottomSheetRef<any> | null = null;\n\n  /** Reference to the currently opened bottom sheet. */\n  get _openedBottomSheetRef(): MatBottomSheetRef<any> | null {\n    const parent = this._parentBottomSheet;\n    return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n  }\n\n  set _openedBottomSheetRef(value: MatBottomSheetRef<any> | null) {\n    if (this._parentBottomSheet) {\n      this._parentBottomSheet._openedBottomSheetRef = value;\n    } else {\n      this._bottomSheetRefAtThisLevel = value;\n    }\n  }\n\n  constructor(\n      private _overlay: Overlay,\n      private _injector: Injector,\n      @Optional() @SkipSelf() private _parentBottomSheet: MatBottomSheet,\n      @Optional() private _location?: Location,\n      @Optional() @Inject(MAT_BOTTOM_SHEET_DEFAULT_OPTIONS)\n          private _defaultOptions?: MatBottomSheetConfig) {}\n\n  open<T, D = any, R = any>(component: ComponentType<T>,\n                   config?: MatBottomSheetConfig<D>): MatBottomSheetRef<T, R>;\n  open<T, D = any, R = any>(template: TemplateRef<T>,\n                   config?: MatBottomSheetConfig<D>): MatBottomSheetRef<T, R>;\n\n  open<T, D = any, R = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n                   config?: MatBottomSheetConfig<D>): MatBottomSheetRef<T, R> {\n\n    const _config =\n        _applyConfigDefaults(this._defaultOptions || new MatBottomSheetConfig(), config);\n    const overlayRef = this._createOverlay(_config);\n    const container = this._attachContainer(overlayRef, _config);\n    const ref = new MatBottomSheetRef<T, R>(container, overlayRef, this._location);\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n        $implicit: _config.data,\n        bottomSheetRef: ref\n      } as any));\n    } else {\n      const portal = new ComponentPortal(componentOrTemplateRef, undefined,\n            this._createInjector(_config, ref));\n      const contentRef = container.attachComponentPortal(portal);\n      ref.instance = contentRef.instance;\n    }\n\n    // When the bottom sheet is dismissed, clear the reference to it.\n    ref.afterDismissed().subscribe(() => {\n      // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n      if (this._openedBottomSheetRef == ref) {\n        this._openedBottomSheetRef = null;\n      }\n    });\n\n    if (this._openedBottomSheetRef) {\n      // If a bottom sheet is already in view, dismiss it and enter the\n      // new bottom sheet after exit animation is complete.\n      this._openedBottomSheetRef.afterDismissed().subscribe(() => ref.containerInstance.enter());\n      this._openedBottomSheetRef.dismiss();\n    } else {\n      // If no bottom sheet is in view, enter the new bottom sheet.\n      ref.containerInstance.enter();\n    }\n\n    this._openedBottomSheetRef = ref;\n\n    return ref;\n  }\n\n  /**\n   * Dismisses the currently-visible bottom sheet.\n   */\n  dismiss(): void {\n    if (this._openedBottomSheetRef) {\n      this._openedBottomSheetRef.dismiss();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._bottomSheetRefAtThisLevel) {\n      this._bottomSheetRefAtThisLevel.dismiss();\n    }\n  }\n\n  /**\n   * Attaches the bottom sheet container component to the overlay.\n   */\n  private _attachContainer(overlayRef: OverlayRef,\n                           config: MatBottomSheetConfig): MatBottomSheetContainer {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n      [MatBottomSheetConfig, config]\n    ]));\n\n    const containerPortal =\n        new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n    const containerRef: ComponentRef<MatBottomSheetContainer> = overlayRef.attach(containerPortal);\n    return containerRef.instance;\n  }\n\n  /**\n   * Creates a new overlay and places it in the correct location.\n   * @param config The user-specified bottom sheet config.\n   */\n  private _createOverlay(config: MatBottomSheetConfig): OverlayRef {\n    const overlayConfig = new OverlayConfig({\n      direction: config.direction,\n      hasBackdrop: config.hasBackdrop,\n      disposeOnNavigation: config.closeOnNavigation,\n      maxWidth: '100%',\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      positionStrategy: this._overlay.position()\n        .global()\n        .centerHorizontally()\n        .bottom('0')\n    });\n\n    if (config.backdropClass) {\n      overlayConfig.backdropClass = config.backdropClass;\n    }\n\n    return this._overlay.create(overlayConfig);\n  }\n\n  /**\n   * Creates an injector to be used inside of a bottom sheet component.\n   * @param config Config that was used to create the bottom sheet.\n   * @param bottomSheetRef Reference to the bottom sheet.\n   */\n  private _createInjector<T>(config: MatBottomSheetConfig,\n                             bottomSheetRef: MatBottomSheetRef<T>): PortalInjector {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injectionTokens = new WeakMap<any, any>([\n      [MatBottomSheetRef, bottomSheetRef],\n      [MAT_BOTTOM_SHEET_DATA, config.data]\n    ]);\n\n    if (config.direction &&\n        (!userInjector || !userInjector.get<Directionality | null>(Directionality, null))) {\n      injectionTokens.set(Directionality, {\n        value: config.direction,\n        change: observableOf()\n      });\n    }\n\n    return new PortalInjector(userInjector || this._injector, injectionTokens);\n  }\n}\n\n/**\n * Applies default options to the bottom sheet config.\n * @param defaults Object containing the default values to which to fall back.\n * @param config The configuration to which the defaults will be applied.\n * @returns The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(defaults: MatBottomSheetConfig,\n                              config?: MatBottomSheetConfig): MatBottomSheetConfig {\n  return {...defaults, ...config};\n}\n"]},"metadata":{},"sourceType":"module"}